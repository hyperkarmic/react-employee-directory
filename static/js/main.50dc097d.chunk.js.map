{"version":3,"sources":["components/Jumbo/index.js","components/SearchBar/index.js","components/Table/index.js","containers/Search/index.js","App.js","index.js"],"names":["Jumbo","class","SearchBar","onChange","type","placeholder","renderRow","row","date","src","alt","name","title","first","last","formatName","picture","large","phone","email","dob","moment","format","Table","rows","onSortByDob","className","scope","onClick","map","renderRows","App","props","handleOnChange","event","employees","state","filterBy","target","value","employeesToRender","filter","employee","lastName","includes","setState","handleSortByDob","sortedEmployees","sort","a","b","diff","loading","error","axios","get","data","results","this","renderTable","Component","Search","ReactDOM","render","document","getElementById"],"mappings":"+MAeeA,EAbD,WACZ,OACE,yBAAKC,MAAM,yBACT,wBAAIA,MAAM,aAAV,sBACA,uBAAGA,MAAM,QAAT,qFAIA,wBAAIA,MAAM,W,yFCKDC,EAbG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OACE,yBAAKF,MAAM,mBACT,2BACEE,SAAUA,EACVC,KAAK,OACLH,MAAM,eACNI,YAAY,sBCMdC,EAAY,SAACC,GACjB,IATkBC,EAICC,EAAKC,EAKlBC,EAbW,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAClC,MAAM,GAAN,OAAUF,EAAV,aAAoBC,EAApB,YAA6BC,GAYhBC,CAAWR,EAAII,MAC5B,OACE,4BACE,6BAReF,EAQEF,EAAIS,QAAQC,MARTP,EAQgBC,EAPjC,yBAAKF,IAAKA,EAAKC,IAAKA,EAAKT,MAAM,oBAQlC,4BAAKU,GACL,4BAAKJ,EAAIW,OACT,4BAAKX,EAAIY,OACT,6BAhBcX,EAgBED,EAAIa,IAAIZ,KAfrBa,IAAOb,GAAMc,OAAO,kBA6CdC,EArBD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACrB,OACE,yBAAKC,UAAU,aACb,2BAAOzB,MAAM,uBACX,+BACE,4BACE,wBAAI0B,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,MAAMC,QAASH,GAAzB,SAdO,SAACD,GAClB,OAAO,+BAAQA,EAAKK,IAAIvB,IAkBjBwB,CAAWN,MCkCLO,E,kDAvEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAsBRC,eAAiB,SAACC,GAAW,IACnBC,EAAc,EAAKC,MAAnBD,UACFE,EAAWH,EAAMI,OAAOC,MACxBC,EAAoBL,EAAUM,QAAO,SAACC,GAC1C,IAAMC,EAAWD,EAAS/B,KAAKG,KAG/B,OAFkB4B,EAAS/B,KAAKE,MAEf+B,SAASP,IAAaM,EAASC,SAASP,MAG3D,EAAKQ,SAAS,CACZL,uBAlCe,EAsCnBM,gBAAkB,WAAO,IAGjBC,EAFwB,EAAKX,MAA3BI,kBAEkCQ,MAAK,SAACC,EAAGC,GACjD,OAAO7B,IAAO4B,EAAE7B,IAAIZ,MAAM2C,KAAKD,EAAE9B,IAAIZ,SAGvC,EAAKqC,SAAS,CACZL,kBAAmBO,KA3CrB,EAAKX,MAAQ,CACXD,UAAW,GACXK,kBAAmB,GACnBY,SAAS,EACTC,MAAO,IAPQ,E,oMAYMC,IAAMC,IAfjB,gD,gBAeJC,E,EAAAA,KACFrB,EAAYqB,EAAKC,QAEvBC,KAAKb,SAAS,CACZV,YACAK,kBAAmBL,EACnBiB,SAAS,EACTC,MAAO,K,0IA+BI,IAAD,EACkCK,KAAKtB,MAA3CgB,EADI,EACJA,QAASC,EADL,EACKA,MAAOb,EADZ,EACYA,kBAExB,OAAKY,GAAYC,EAKV,KAHH,kBAAC,EAAD,CAAO7B,KAAMgB,EAAmBf,YAAaiC,KAAKZ,oB,+BAOtD,OACE,yBAAKpB,UAAU,aACb,kBAAC,EAAD,CAAWvB,SAAUuD,KAAKzB,iBACzByB,KAAKC,mB,GAlEIC,aCKH7B,EATH,WACV,OACE,yBAAKL,UAAU,eACb,kBAAC,EAAD,MACA,kBAACmC,EAAD,QCJNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.50dc097d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Jumbo = () => {\n  return (\n    <div class=\"jumbotron text-center\">\n      <h1 class=\"display-4\">Employee Directory</h1>\n      <p class=\"lead\">\n        Click on carets to filter by heading or use the search box to narrow\n        your results\n      </p>\n      <hr class=\"my-4\" />\n    </div>\n  );\n};\n\nexport default Jumbo;\n","import React from \"react\";\n\nconst SearchBar = ({ onChange }) => {\n  return (\n    <div class=\"form-group mx-2\">\n      <input\n        onChange={onChange}\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"Search Employee\"\n      />\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst formatName = ({ title, first, last }) => {\n  return `${title}. ${first} ${last}`;\n};\n\nconst formatDate = (date) => {\n  return moment(date).format(\"DD-MM-YYYY\");\n};\n\nconst renderImage = (src, alt) => {\n  return <img src={src} alt={alt} class=\"img-thumbnail\" />;\n};\n\nconst renderRow = (row) => {\n  const name = formatName(row.name);\n  return (\n    <tr>\n      <td>{renderImage(row.picture.large, name)}</td>\n      <td>{name}</td>\n      <td>{row.phone}</td>\n      <td>{row.email}</td>\n      <td>{formatDate(row.dob.date)}</td>\n    </tr>\n  );\n};\n\nconst renderRows = (rows) => {\n  return <tbody>{rows.map(renderRow)}</tbody>;\n};\n\nconst Table = ({ rows, onSortByDob }) => {\n  return (\n    <div className=\"container\">\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Image</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Phone</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\" onClick={onSortByDob}>\n              DOB\n            </th>\n          </tr>\n        </thead>\n        {renderRows(rows)}\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nimport SearchBar from \"../../components/SearchBar\";\nimport Table from \"../../components/Table\";\n\nconst API_URL = \"https://randomuser.me/api/?results=10&nat=gb\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      employees: [],\n      employeesToRender: [],\n      loading: true,\n      error: \"\",\n    };\n  }\n\n  async componentDidMount() {\n    const { data } = await axios.get(API_URL);\n    const employees = data.results;\n\n    this.setState({\n      employees,\n      employeesToRender: employees,\n      loading: false,\n      error: \"\",\n    });\n  }\n\n  handleOnChange = (event) => {\n    const { employees } = this.state;\n    const filterBy = event.target.value;\n    const employeesToRender = employees.filter((employee) => {\n      const lastName = employee.name.last;\n      const firstName = employee.name.first;\n\n      return firstName.includes(filterBy) || lastName.includes(filterBy);\n    });\n\n    this.setState({\n      employeesToRender,\n    });\n  };\n\n  handleSortByDob = () => {\n    const { employeesToRender } = this.state;\n\n    const sortedEmployees = employeesToRender.sort((a, b) => {\n      return moment(a.dob.date).diff(b.dob.date);\n    });\n\n    this.setState({\n      employeesToRender: sortedEmployees,\n    });\n  };\n\n  renderTable() {\n    const { loading, error, employeesToRender } = this.state;\n\n    if (!loading && !error) {\n      return (\n        <Table rows={employeesToRender} onSortByDob={this.handleSortByDob} />\n      );\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <SearchBar onChange={this.handleOnChange} />\n        {this.renderTable()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nimport Jumbo from \"./components/Jumbo\";\nimport Search from \"./containers/Search\";\n\nconst App = () => {\n  return (\n    <div className=\"text-center\">\n      <Jumbo />\n      <Search />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}